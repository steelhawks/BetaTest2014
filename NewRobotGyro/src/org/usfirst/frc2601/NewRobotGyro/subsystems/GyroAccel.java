// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.


package org.usfirst.frc2601.NewRobotGyro.subsystems;

import org.usfirst.frc2601.NewRobotGyro.RobotMap;
import org.usfirst.frc2601.NewRobotGyro.commands.*;
import edu.wpi.first.wpilibj.*;
import java.lang.Math;

import edu.wpi.first.wpilibj.command.Subsystem;

/**
 *
 */
public class GyroAccel extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    Gyro gyro = RobotMap.gyro;
    Accelerometer accel = RobotMap.accel;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        System.out.println("------Gyro object created");
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
        //gyro.setSensitivity(360);
        //mSetSensitivity(0.007);
        mGyroReset();
        setDefaultCommand(new MeasureAccel());
    }
    
    public void mGyroFree(){
        System.out.println("------FREEING GYRO------");
        gyro.free();
    }
    
    public void mGyroReset(){
        System.out.println("------RESETTING GYRO------");
        gyro.reset();
    }
    
    public void mSetSensitivity(double sensitivity){
        System.out.println("------RESETTING SENSITIVITY TO " + sensitivity + "------");
        gyro.setSensitivity(sensitivity);
    }
    
    public double mGetAngle(){
        //System.out.println(gyro.getAngle()*(180/Math.PI));
        //return gyro.getAngle()*(180/Math.PI);
        //gyro.reset();
        //Timer.delay(0.25);
        System.out.println("------mGetAngle(): " + gyro.getAngle());
        return gyro.getAngle();
    }
    
    public double mGetRate(){
        System.out.println("------mGetRate(): " + gyro.getRate());
        return gyro.getRate();
    }
    
    public double mGetAccel(){
        System.out.println("------mGetAccel(): " + accel.getAcceleration());
        return accel.getAcceleration();
    }
    
}

