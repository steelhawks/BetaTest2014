// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc2601.NewRobot;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainfrontLeft;
    public static SpeedController driveTrainrearLeft;
    public static SpeedController driveTrainfrontRight;
    public static SpeedController driveTrainrearRight;
    public static RobotDrive driveTrainRobotDrive41;
    public static Solenoid climberLeftHookSolenoidExtend;
    public static Solenoid climberLeftHookSolenoidRetract;
    public static Compressor climberCompressor;
    public static Solenoid sliderSliderSolenoidRetract;
    public static Solenoid sliderSliderSolenoidExtend;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainfrontLeft = new Jaguar(1, 1);
	LiveWindow.addActuator("DriveTrain", "frontLeft", (Jaguar) driveTrainfrontLeft);
        
        driveTrainrearLeft = new Jaguar(1, 2);
	LiveWindow.addActuator("DriveTrain", "rearLeft", (Jaguar) driveTrainrearLeft);
        
        driveTrainfrontRight = new Jaguar(1, 4);
	LiveWindow.addActuator("DriveTrain", "frontRight", (Jaguar) driveTrainfrontRight);
        
        driveTrainrearRight = new Jaguar(1, 3);
	LiveWindow.addActuator("DriveTrain", "rearRight", (Jaguar) driveTrainrearRight);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainfrontLeft, driveTrainrearLeft,
              driveTrainfrontRight, driveTrainrearRight);
	
        driveTrainRobotDrive41.setSafetyEnabled(true);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.5);
        driveTrainRobotDrive41.setMaxOutput(1.0);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        climberLeftHookSolenoidExtend = new Solenoid(1, 5);
	LiveWindow.addActuator("Climber", "Left Hook Solenoid Extend", climberLeftHookSolenoidExtend);
        
        climberLeftHookSolenoidRetract = new Solenoid(1, 6);
	LiveWindow.addActuator("Climber", "Left Hook Solenoid Retract", climberLeftHookSolenoidRetract);
        
        climberCompressor = new Compressor(1, 1, 1, 1);
	
        
        sliderSliderSolenoidRetract = new Solenoid(1, 1);
	LiveWindow.addActuator("Slider", "Slider Solenoid Retract", sliderSliderSolenoidRetract);
        
        sliderSliderSolenoidExtend = new Solenoid(1, 2);
	LiveWindow.addActuator("Slider", "Slider Solenoid Extend", sliderSliderSolenoidExtend);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
